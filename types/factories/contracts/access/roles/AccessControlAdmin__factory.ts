/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AccessControlAdmin,
  AccessControlAdminInterface,
} from "../../../../contracts/access/roles/AccessControlAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "grantAdminRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "grantSignerRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576105a3908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163c634b78e1461044f575063cffa81871461003957600080fd5b3461044b576020806003193601126104475781356001600160a01b0381169190829003610443577fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758086527fb0f718dd0461f98f79a268be163688a70a97977202fe15124bb3813f4359541c93848352858720338852835260ff86882054161561014b5750507fe2f4eaae4a9751e85a3e4a7b9587827a877f29914755229b07a7b2da98285f7092838652808252848620838752825260ff85872054161561010057858551f35b83865281528385209082865252828420600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d858551a438808080858551f35b918692863394815194606086019667ffffffffffffffff9787811089821117610430578452602a8752858701918436843787511561041d576030835387519160019283101561040a57607860218a015360295b8381116103a357506102d357845190608082018281108b8211176103905786526042825287820192606036853782511561037d5760308453825181101561037d57607860218401536041905b8082116103145750506102d3579161026a95939185936067999896519788936102408986019b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008d52518092603788019061054c565b8401917001034b99036b4b9b9b4b733903937b6329607d1b6037840152518093604884019061054c565b0103602881018652601f199788910116850197858910908911176102c0575060449593601f93889693876102b7945262461bcd60e51b88528701525180928160248801528787019061054c565b01168101030190fd5b634e487b7160e01b815260418352602490fd5b606486888088519262461bcd60e51b845283015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f8116601081101561036a576f181899199a1a9b1b9c1cb0b131b232b360811b901a610343848661056f565b53881c9180156103575760001901906101ea565b634e487b7160e01b875260118952602487fd5b634e487b7160e01b885260328a52602488fd5b634e487b7160e01b865260328852602486fd5b634e487b7160e01b865260418852602486fd5b90600f811660108110156103f7576f181899199a1a9b1b9c1cb0b131b232b360811b901a6103d1838c61056f565b53871c9080156103e4576000190161019e565b634e487b7160e01b865260118852602486fd5b634e487b7160e01b875260328952602487fd5b634e487b7160e01b855260328752602485fd5b634e487b7160e01b845260328652602484fd5b634e487b7160e01b845260418652602484fd5b8480fd5b8380fd5b8280fd5b9190503461044757602091826003193601126104435781356001600160a01b038181169391849003610548577fa7222481f8aff9c0b8c2a969dffbd3c91ebd3e9fb5b7b31128200b05480e8ab3541633036105085750507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775918285527fb0f718dd0461f98f79a268be163688a70a97977202fe15124bb3813f4359541c808252848620838752825260ff85872054161561010057858551f35b62461bcd60e51b82528101839052601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606490fd5b8680fd5b60005b83811061055f5750506000910152565b818101518382015260200161054f565b908151811015610580570160200190565b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000810000a";

type AccessControlAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessControlAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessControlAdmin__factory extends ContractFactory {
  constructor(...args: AccessControlAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccessControlAdmin> {
    return super.deploy(overrides || {}) as Promise<AccessControlAdmin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccessControlAdmin {
    return super.attach(address) as AccessControlAdmin;
  }
  override connect(signer: Signer): AccessControlAdmin__factory {
    return super.connect(signer) as AccessControlAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlAdminInterface {
    return new utils.Interface(_abi) as AccessControlAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlAdmin {
    return new Contract(address, _abi, signerOrProvider) as AccessControlAdmin;
  }
}
