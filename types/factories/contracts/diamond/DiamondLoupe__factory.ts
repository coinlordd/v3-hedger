/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DiamondLoupe,
  DiamondLoupeInterface,
} from "../../../contracts/diamond/DiamondLoupe";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576106aa908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816352ef6b2c14610325575080637a0ed62714610139578063adfca15e146100b45763cdffacc61461004f57600080fd5b346100b05760203660031901126100b0573563ffffffff60e01b81168091036100b05782527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020908152918190205490516001600160a01b039091168152f35b8280fd5b50346100b05760203660031901126100b05735916001600160a01b0383168303610136575061011f61011a6101329360018060a01b03166000527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602052604060002090565b6104c0565b9051918291602083526020830190610408565b0390f35b80fd5b508290346103215781600319360112610321577fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e9081549061017a8261047e565b9261018786519485610446565b828452601f196101968461047e565b01855b8181106102da575050845b8381106102235750505050825191602080840190808552835180925285850181878460051b880101950193965b8388106101de5786860387f35b90919293948380610212600193603f198b820301875285838b51878060a01b03815116845201519181858201520190610408565b9701930197019690939291936101d1565b8186527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef81015461029d906001600160a01b0316806102628489610496565b51526001600160a01b031660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d6020526040902090565b6102b460206102ac8489610496565b5101916104c0565b905260001981146102c7576001016101a4565b634e487b7160e01b865260118352602486fd5b875188810181811067ffffffffffffffff82111761030e5790602092918a5288815282606081830152828901015201610199565b634e487b7160e01b895260418652602489fd5b5080fd5b8484913461032157816003193601126103215791907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e9081549384815260209485820190819484527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef90845b8181106103eb57505050816103a7910382610446565b83519485948186019282875251809352850193925b8281106103cb57505050500390f35b83516001600160a01b0316855286955093810193928101926001016103bc565b82546001600160a01b031684529288019260019283019201610391565b90815180825260208080930193019160005b828110610428575050505090565b83516001600160e01b0319168552938101939281019260010161041a565b90601f8019910116810190811067ffffffffffffffff82111761046857604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116104685760051b60200190565b80518210156104aa5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b906040918251809382549283835260209182840191600052826000209460005b81600782011061062a578461053b97549383831061060a575b8383106105ea575b8383106105ca575b8383106105aa575b83831061058a575b83831061056d575b50828210610551575b501061053d575b5090500383610446565b565b6001600160e01b0319168152018038610531565b83811b6001600160e01b0319168552909301926001018461052a565b84901b6001600160e01b0319168552909301926001018438610521565b606085901b6001600160e01b031916865294810194600190920191610519565b608085901b6001600160e01b031916865294810194600190920191610511565b60a085901b6001600160e01b031916865294810194600190920191610509565b60c085901b6001600160e01b031916865294810194600190920191610501565b60e085901b6001600160e01b0319168652948101946001909201916104f9565b86546001600160e01b031960e082811b8216875260c083811b83168989015260a084811b8416888a0152608085811b85166060808c019190915286901b8516908a015284881b84169089015283891b831690880152911690850152600190960195889550610100909301926008016104e056fea164736f6c6343000810000a";

type DiamondLoupeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupe__factory extends ContractFactory {
  constructor(...args: DiamondLoupeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupe> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupe>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupe {
    return super.attach(address) as DiamondLoupe;
  }
  override connect(signer: Signer): DiamondLoupe__factory {
    return super.connect(signer) as DiamondLoupe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeInterface {
    return new utils.Interface(_abi) as DiamondLoupeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupe {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupe;
  }
}
